name: Build binaries (gs-flux + gs-flux-desktop)

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
  release:
    types: [created, published]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust builds
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
            gs-flux-desktop/src-tauri

      - name: Install Linux dependencies (Tauri)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            libsoup-3.0-dev

      - name: Build gs-flux (CLI)
        run: cargo build --release -p gs-flux

      - name: Upload gs-flux artifact (Linux)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: gs-flux-Linux-x86_64
          path: target/release/gs-flux
          if-no-files-found: error

      - name: Upload gs-flux artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: gs-flux-Windows-x86_64
          path: target/release/gs-flux.exe
          if-no-files-found: error

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install frontend dependencies
        working-directory: gs-flux-desktop
        run: pnpm install --frozen-lockfile

      - name: Build gs-flux-desktop (bundled installer)
        working-directory: gs-flux-desktop
        run: pnpm build

      - name: Upload gs-flux-desktop binary (Linux)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: gs-flux-desktop-Linux-x86_64
          path: target/release/gs-flux-desktop
          if-no-files-found: error

      - name: Upload gs-flux-desktop binary (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: gs-flux-desktop-Windows-x86_64
          path: target/release/gs-flux-desktop.exe
          if-no-files-found: error

      - name: Upload packaged installers (Linux)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: gs-flux-desktop-installers-Linux
          path: |
            target/release/bundle/appimage/*.AppImage
            target/release/bundle/deb/*.deb
            target/release/bundle/rpm/*.rpm
          if-no-files-found: ignore

      - name: Upload packaged installers (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: gs-flux-desktop-installers-Windows
          path: |
            target/release/bundle/msi/*.msi
            target/release/bundle/nsis/*.exe
          if-no-files-found: ignore


  publish_release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "*"
          path: dist
          merge-multiple: true

      - name: Normalize asset names (add OS suffix to raw binaries)
        run: |
          set -e
          if [ -f dist/gs-flux ]; then mv dist/gs-flux dist/gs-flux-linux-x86_64; fi
          if [ -f dist/gs-flux.exe ]; then mv dist/gs-flux.exe dist/gs-flux-windows-x86_64.exe; fi
          if [ -f dist/gs-flux-desktop ]; then mv dist/gs-flux-desktop dist/gs-flux-desktop-linux-x86_64; fi
          if [ -f dist/gs-flux-desktop.exe ]; then mv dist/gs-flux-desktop.exe dist/gs-flux-desktop-windows-x86_64.exe; fi

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**
